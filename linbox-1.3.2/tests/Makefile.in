# Makefile.in generated by automake 1.11.5 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (c) 2010-2011 the LinBox group
# ========LICENCE========
# This file is part of the library LinBox.
#
# LinBox is free software: you can redistribute it and/or modify
# it under the terms of the  GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
# ========LICENCE========
VPATH = @srcdir@
am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = $(am__EXEEXT_1) $(am__EXEEXT_13) $(am__EXEEXT_14) \
	$(am__EXEEXT_15) $(am__EXEEXT_16) $(am__EXEEXT_16) \
	$(am__EXEEXT_17)
EXTRA_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4) $(am__EXEEXT_5) $(am__EXEEXT_6) \
	$(am__EXEEXT_7) $(am__EXEEXT_8) $(am__EXEEXT_9) \
	$(am__EXEEXT_10) $(am__EXEEXT_11) $(am__EXEEXT_12)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in TODO
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/aclocal-include.m4 \
	$(top_srcdir)/macros/config-header.m4 \
	$(top_srcdir)/macros/debug.m4 \
	$(top_srcdir)/macros/expat-check.m4 \
	$(top_srcdir)/macros/fflas-ffpack-check.m4 \
	$(top_srcdir)/macros/fplll-check.m4 \
	$(top_srcdir)/macros/givaro-check.m4 \
	$(top_srcdir)/macros/gmp-check.m4 \
	$(top_srcdir)/macros/iml-check.m4 \
	$(top_srcdir)/macros/lapack-check.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/lidia-check.m4 \
	$(top_srcdir)/macros/linbox-benchmark.m4 \
	$(top_srcdir)/macros/linbox-doc.m4 \
	$(top_srcdir)/macros/linbox-misc.m4 \
	$(top_srcdir)/macros/linbox-opt.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 \
	$(top_srcdir)/macros/m4ri-check.m4 \
	$(top_srcdir)/macros/m4rie-check.m4 \
	$(top_srcdir)/macros/maple-check.m4 \
	$(top_srcdir)/macros/mpfr-check.m4 \
	$(top_srcdir)/macros/ntl-check.m4 \
	$(top_srcdir)/macros/saclib-check.m4 \
	$(top_srcdir)/macros/sage-check.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = test-commentator$(EXEEXT) test-det$(EXEEXT) \
	test-frobenius$(EXEEXT) test-rank$(EXEEXT) test-solve$(EXEEXT) \
	test-nullspace$(EXEEXT) test-smith-form-binary$(EXEEXT) \
	test-rational-solver$(EXEEXT) \
	test-rational-solver-adaptive$(EXEEXT) test-charpoly$(EXEEXT) \
	test-cra$(EXEEXT)
am__EXEEXT_2 = test-givaro-fields$(EXEEXT)
am__EXEEXT_3 = test-smith-form$(EXEEXT) test-ntl-lzz_p$(EXEEXT) \
	test-ntl-ZZ_p$(EXEEXT) test-ntl-toeplitz$(EXEEXT) \
	test-ntl-hankel$(EXEEXT) test-ntl-sylvester$(EXEEXT) \
	test-smith-form-iliopoulos$(EXEEXT) test-toeplitz-det$(EXEEXT)
am__EXEEXT_4 = test-optimization$(EXEEXT)
am__EXEEXT_5 = test-lidia-gfq$(EXEEXT)
am__EXEEXT_6 = benchmark-fields$(EXEEXT) \
	benchmark-blas-domain$(EXEEXT)
am__EXEEXT_7 = test-dense-zero-one$(EXEEXT)
am__EXEEXT_8 = test-ntl-RR$(EXEEXT) test-param-fuzzy$(EXEEXT)
am__EXEEXT_9 = test-unparametric-field$(EXEEXT) test-bmseq$(EXEEXT) \
	test-zo$(EXEEXT)
am__EXEEXT_10 = test-bitonic-sort$(EXEEXT) \
	test-blackbox-block-container$(EXEEXT) \
	test-blas-domain$(EXEEXT) test-butterfly$(EXEEXT) \
	test-companion$(EXEEXT) test-dense$(EXEEXT) \
	test-diagonal$(EXEEXT) test-dif$(EXEEXT) \
	test-direct-sum$(EXEEXT) test-echelon-form$(EXEEXT) \
	test-ffpack$(EXEEXT) test-getentry$(EXEEXT) test-gf2$(EXEEXT) \
	test-gmp-rational$(EXEEXT) test-hilbert$(EXEEXT) \
	test-hom$(EXEEXT) test-inverse$(EXEEXT) test-isposdef$(EXEEXT) \
	test-ispossemidef$(EXEEXT) test-matrix-domain$(EXEEXT) \
	test-matrix-stream$(EXEEXT) test-minpoly$(EXEEXT) \
	test-modular$(EXEEXT) test-modular-balanced-int$(EXEEXT) \
	test-modular-balanced-float$(EXEEXT) \
	test-modular-balanced-double$(EXEEXT) \
	test-modular-byte$(EXEEXT) test-modular-double$(EXEEXT) \
	test-modular-float$(EXEEXT) test-modular-int$(EXEEXT) \
	test-modular-short$(EXEEXT) test-block-ring$(EXEEXT) \
	test-PID-integer$(EXEEXT) test-moore-penrose$(EXEEXT) \
	test-randiter-nonzero$(EXEEXT) \
	test-rational-matrix-factory$(EXEEXT) \
	test-scalar-matrix$(EXEEXT) test-solve-nonsingular$(EXEEXT) \
	test-sparse$(EXEEXT) test-subiterator$(EXEEXT) \
	test-submatrix$(EXEEXT) test-subvector$(EXEEXT) \
	test-sum$(EXEEXT) test-trace$(EXEEXT) test-triplesbb$(EXEEXT) \
	test-vector-domain$(EXEEXT) test-qlup$(EXEEXT) \
	test-zero-one$(EXEEXT) test-last-invariant-factor$(EXEEXT) \
	test-cradomain$(EXEEXT) \
	test-rational-reconstruction-base$(EXEEXT)
am__EXEEXT_11 = test-rat-charpoly$(EXEEXT) test-rat-solve$(EXEEXT) \
	test-rat-minpoly$(EXEEXT) test-smith-form-local$(EXEEXT) \
	test-smith-form-adaptive$(EXEEXT) \
	test-dyadic-to-rational$(EXEEXT) \
	test-mg-block-lanczos$(EXEEXT) test-ftrmm$(EXEEXT) \
	test-la-block-lanczos$(EXEEXT)
am__EXEEXT_12 = test-toom-cook$(EXEEXT)
am_benchmark_blas_domain_OBJECTS = benchmark-blas-domain.$(OBJEXT)
benchmark_blas_domain_OBJECTS = $(am_benchmark_blas_domain_OBJECTS)
benchmark_blas_domain_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
benchmark_blas_domain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_benchmark_fields_OBJECTS = benchmark-fields.$(OBJEXT)
benchmark_fields_OBJECTS = $(am_benchmark_fields_OBJECTS)
benchmark_fields_LDADD = $(LDADD)
benchmark_fields_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_PID_integer_OBJECTS = test-PID-integer.$(OBJEXT)
test_PID_integer_OBJECTS = $(am_test_PID_integer_OBJECTS)
test_PID_integer_LDADD = $(LDADD)
test_PID_integer_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_bitonic_sort_OBJECTS = test-bitonic-sort.$(OBJEXT)
test_bitonic_sort_OBJECTS = $(am_test_bitonic_sort_OBJECTS)
test_bitonic_sort_LDADD = $(LDADD)
test_bitonic_sort_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_blackbox_block_container_OBJECTS =  \
	test-blackbox-block-container.$(OBJEXT)
test_blackbox_block_container_OBJECTS =  \
	$(am_test_blackbox_block_container_OBJECTS)
test_blackbox_block_container_LDADD = $(LDADD)
test_blackbox_block_container_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_blas_domain_OBJECTS = test-blas-domain.$(OBJEXT)
test_blas_domain_OBJECTS = $(am_test_blas_domain_OBJECTS)
test_blas_domain_LDADD = $(LDADD)
test_blas_domain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_block_ring_OBJECTS = test-block-ring.$(OBJEXT)
test_block_ring_OBJECTS = $(am_test_block_ring_OBJECTS)
test_block_ring_LDADD = $(LDADD)
test_block_ring_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_bmseq_OBJECTS = test-bmseq.$(OBJEXT)
test_bmseq_OBJECTS = $(am_test_bmseq_OBJECTS)
test_bmseq_LDADD = $(LDADD)
test_bmseq_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_butterfly_OBJECTS = test-butterfly.$(OBJEXT)
test_butterfly_OBJECTS = $(am_test_butterfly_OBJECTS)
test_butterfly_LDADD = $(LDADD)
test_butterfly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_charpoly_OBJECTS = test-charpoly.$(OBJEXT)
test_charpoly_OBJECTS = $(am_test_charpoly_OBJECTS)
test_charpoly_LDADD = $(LDADD)
test_charpoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_commentator_OBJECTS = test-commentator.$(OBJEXT)
test_commentator_OBJECTS = $(am_test_commentator_OBJECTS)
test_commentator_LDADD = $(LDADD)
test_commentator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_companion_OBJECTS = test-companion.$(OBJEXT)
test_companion_OBJECTS = $(am_test_companion_OBJECTS)
test_companion_LDADD = $(LDADD)
test_companion_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_cra_OBJECTS = test-cra.$(OBJEXT)
test_cra_OBJECTS = $(am_test_cra_OBJECTS)
test_cra_LDADD = $(LDADD)
test_cra_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_cradomain_OBJECTS = test-cradomain.$(OBJEXT)
test_cradomain_OBJECTS = $(am_test_cradomain_OBJECTS)
test_cradomain_LDADD = $(LDADD)
test_cradomain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_dense_OBJECTS = test-dense.$(OBJEXT)
test_dense_OBJECTS = $(am_test_dense_OBJECTS)
test_dense_LDADD = $(LDADD)
test_dense_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_dense_zero_one_OBJECTS = test-dense-zero-one.$(OBJEXT)
test_dense_zero_one_OBJECTS = $(am_test_dense_zero_one_OBJECTS)
test_dense_zero_one_LDADD = $(LDADD)
test_dense_zero_one_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_det_OBJECTS = test-det.$(OBJEXT)
test_det_OBJECTS = $(am_test_det_OBJECTS)
test_det_LDADD = $(LDADD)
test_det_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_diagonal_OBJECTS = test-diagonal.$(OBJEXT)
test_diagonal_OBJECTS = $(am_test_diagonal_OBJECTS)
test_diagonal_LDADD = $(LDADD)
test_diagonal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_dif_OBJECTS = test-dif.$(OBJEXT)
test_dif_OBJECTS = $(am_test_dif_OBJECTS)
test_dif_LDADD = $(LDADD)
test_dif_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_direct_sum_OBJECTS = test-direct-sum.$(OBJEXT)
test_direct_sum_OBJECTS = $(am_test_direct_sum_OBJECTS)
test_direct_sum_LDADD = $(LDADD)
test_direct_sum_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_dyadic_to_rational_OBJECTS =  \
	test-dyadic-to-rational.$(OBJEXT)
test_dyadic_to_rational_OBJECTS =  \
	$(am_test_dyadic_to_rational_OBJECTS)
test_dyadic_to_rational_LDADD = $(LDADD)
test_dyadic_to_rational_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_echelon_form_OBJECTS = test-echelon-form.$(OBJEXT)
test_echelon_form_OBJECTS = $(am_test_echelon_form_OBJECTS)
test_echelon_form_LDADD = $(LDADD)
test_echelon_form_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ffpack_OBJECTS = test-ffpack.$(OBJEXT)
test_ffpack_OBJECTS = $(am_test_ffpack_OBJECTS)
test_ffpack_LDADD = $(LDADD)
test_ffpack_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_frobenius_OBJECTS = test-frobenius.$(OBJEXT)
test_frobenius_OBJECTS = $(am_test_frobenius_OBJECTS)
test_frobenius_LDADD = $(LDADD)
test_frobenius_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ftrmm_OBJECTS = test-ftrmm.$(OBJEXT)
test_ftrmm_OBJECTS = $(am_test_ftrmm_OBJECTS)
test_ftrmm_LDADD = $(LDADD)
test_ftrmm_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_getentry_OBJECTS = test-getentry.$(OBJEXT)
test_getentry_OBJECTS = $(am_test_getentry_OBJECTS)
test_getentry_LDADD = $(LDADD)
test_getentry_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_gf2_OBJECTS = test-gf2.$(OBJEXT)
test_gf2_OBJECTS = $(am_test_gf2_OBJECTS)
test_gf2_LDADD = $(LDADD)
test_gf2_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_givaro_fields_OBJECTS = test-givaro-fields.$(OBJEXT)
test_givaro_fields_OBJECTS = $(am_test_givaro_fields_OBJECTS)
test_givaro_fields_LDADD = $(LDADD)
test_givaro_fields_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_gmp_rational_OBJECTS = test-gmp-rational.$(OBJEXT)
test_gmp_rational_OBJECTS = $(am_test_gmp_rational_OBJECTS)
test_gmp_rational_LDADD = $(LDADD)
test_gmp_rational_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_hilbert_OBJECTS = test-hilbert.$(OBJEXT)
test_hilbert_OBJECTS = $(am_test_hilbert_OBJECTS)
test_hilbert_LDADD = $(LDADD)
test_hilbert_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_hom_OBJECTS = test-hom.$(OBJEXT)
test_hom_OBJECTS = $(am_test_hom_OBJECTS)
test_hom_LDADD = $(LDADD)
test_hom_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_inverse_OBJECTS = test-inverse.$(OBJEXT)
test_inverse_OBJECTS = $(am_test_inverse_OBJECTS)
test_inverse_LDADD = $(LDADD)
test_inverse_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_isposdef_OBJECTS = test-isposdef.$(OBJEXT)
test_isposdef_OBJECTS = $(am_test_isposdef_OBJECTS)
test_isposdef_LDADD = $(LDADD)
test_isposdef_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ispossemidef_OBJECTS = test-ispossemidef.$(OBJEXT)
test_ispossemidef_OBJECTS = $(am_test_ispossemidef_OBJECTS)
test_ispossemidef_LDADD = $(LDADD)
test_ispossemidef_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_la_block_lanczos_OBJECTS = test-la-block-lanczos.$(OBJEXT)
test_la_block_lanczos_OBJECTS = $(am_test_la_block_lanczos_OBJECTS)
test_la_block_lanczos_LDADD = $(LDADD)
test_la_block_lanczos_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_last_invariant_factor_OBJECTS =  \
	test-last-invariant-factor.$(OBJEXT)
test_last_invariant_factor_OBJECTS =  \
	$(am_test_last_invariant_factor_OBJECTS)
test_last_invariant_factor_LDADD = $(LDADD)
test_last_invariant_factor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_lidia_gfq_OBJECTS = test-lidia-gfq.$(OBJEXT)
test_lidia_gfq_OBJECTS = $(am_test_lidia_gfq_OBJECTS)
test_lidia_gfq_LDADD = $(LDADD)
test_lidia_gfq_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_matrix_domain_OBJECTS = test-matrix-domain.$(OBJEXT)
test_matrix_domain_OBJECTS = $(am_test_matrix_domain_OBJECTS)
test_matrix_domain_LDADD = $(LDADD)
test_matrix_domain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_matrix_stream_OBJECTS = test-matrix-stream.$(OBJEXT)
test_matrix_stream_OBJECTS = $(am_test_matrix_stream_OBJECTS)
test_matrix_stream_LDADD = $(LDADD)
test_matrix_stream_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_mg_block_lanczos_OBJECTS = test-mg-block-lanczos.$(OBJEXT)
test_mg_block_lanczos_OBJECTS = $(am_test_mg_block_lanczos_OBJECTS)
test_mg_block_lanczos_LDADD = $(LDADD)
test_mg_block_lanczos_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_minpoly_OBJECTS = test-minpoly.$(OBJEXT)
test_minpoly_OBJECTS = $(am_test_minpoly_OBJECTS)
test_minpoly_LDADD = $(LDADD)
test_minpoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_modular_OBJECTS = test-modular.$(OBJEXT)
test_modular_OBJECTS = $(am_test_modular_OBJECTS)
test_modular_LDADD = $(LDADD)
test_modular_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_modular_balanced_double_OBJECTS =  \
	test-modular-balanced-double.$(OBJEXT)
test_modular_balanced_double_OBJECTS =  \
	$(am_test_modular_balanced_double_OBJECTS)
test_modular_balanced_double_LDADD = $(LDADD)
test_modular_balanced_double_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_modular_balanced_float_OBJECTS =  \
	test-modular-balanced-float.$(OBJEXT)
test_modular_balanced_float_OBJECTS =  \
	$(am_test_modular_balanced_float_OBJECTS)
test_modular_balanced_float_LDADD = $(LDADD)
test_modular_balanced_float_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_modular_balanced_int_OBJECTS =  \
	test-modular-balanced-int.$(OBJEXT)
test_modular_balanced_int_OBJECTS =  \
	$(am_test_modular_balanced_int_OBJECTS)
test_modular_balanced_int_LDADD = $(LDADD)
test_modular_balanced_int_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_modular_byte_OBJECTS = test-modular-byte.$(OBJEXT)
test_modular_byte_OBJECTS = $(am_test_modular_byte_OBJECTS)
test_modular_byte_LDADD = $(LDADD)
test_modular_byte_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_modular_double_OBJECTS = test-modular-double.$(OBJEXT)
test_modular_double_OBJECTS = $(am_test_modular_double_OBJECTS)
test_modular_double_LDADD = $(LDADD)
test_modular_double_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_modular_float_OBJECTS = test-modular-float.$(OBJEXT)
test_modular_float_OBJECTS = $(am_test_modular_float_OBJECTS)
test_modular_float_LDADD = $(LDADD)
test_modular_float_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_modular_int_OBJECTS = test-modular-int.$(OBJEXT)
test_modular_int_OBJECTS = $(am_test_modular_int_OBJECTS)
test_modular_int_LDADD = $(LDADD)
test_modular_int_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_modular_short_OBJECTS = test-modular-short.$(OBJEXT)
test_modular_short_OBJECTS = $(am_test_modular_short_OBJECTS)
test_modular_short_LDADD = $(LDADD)
test_modular_short_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_moore_penrose_OBJECTS = test-moore-penrose.$(OBJEXT)
test_moore_penrose_OBJECTS = $(am_test_moore_penrose_OBJECTS)
test_moore_penrose_LDADD = $(LDADD)
test_moore_penrose_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ntl_RR_OBJECTS = test-ntl-RR.$(OBJEXT)
test_ntl_RR_OBJECTS = $(am_test_ntl_RR_OBJECTS)
test_ntl_RR_LDADD = $(LDADD)
test_ntl_RR_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_ntl_ZZ_p_OBJECTS = test-ntl-ZZ_p.$(OBJEXT)
test_ntl_ZZ_p_OBJECTS = $(am_test_ntl_ZZ_p_OBJECTS)
test_ntl_ZZ_p_LDADD = $(LDADD)
test_ntl_ZZ_p_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ntl_hankel_OBJECTS = test-ntl-hankel.$(OBJEXT)
test_ntl_hankel_OBJECTS = $(am_test_ntl_hankel_OBJECTS)
test_ntl_hankel_LDADD = $(LDADD)
test_ntl_hankel_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ntl_lzz_p_OBJECTS = test-ntl-lzz_p.$(OBJEXT)
test_ntl_lzz_p_OBJECTS = $(am_test_ntl_lzz_p_OBJECTS)
test_ntl_lzz_p_LDADD = $(LDADD)
test_ntl_lzz_p_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ntl_sylvester_OBJECTS = test-ntl-sylvester.$(OBJEXT)
test_ntl_sylvester_OBJECTS = $(am_test_ntl_sylvester_OBJECTS)
test_ntl_sylvester_LDADD = $(LDADD)
test_ntl_sylvester_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_ntl_toeplitz_OBJECTS = test-ntl-toeplitz.$(OBJEXT)
test_ntl_toeplitz_OBJECTS = $(am_test_ntl_toeplitz_OBJECTS)
test_ntl_toeplitz_LDADD = $(LDADD)
test_ntl_toeplitz_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_nullspace_OBJECTS = test-nullspace.$(OBJEXT)
test_nullspace_OBJECTS = $(am_test_nullspace_OBJECTS)
test_nullspace_LDADD = $(LDADD)
test_nullspace_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_optimization_OBJECTS = test-optimization.$(OBJEXT)
test_optimization_OBJECTS = $(am_test_optimization_OBJECTS)
test_optimization_LDADD = $(LDADD)
test_optimization_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_param_fuzzy_OBJECTS = test-param-fuzzy.$(OBJEXT)
test_param_fuzzy_OBJECTS = $(am_test_param_fuzzy_OBJECTS)
test_param_fuzzy_LDADD = $(LDADD)
test_param_fuzzy_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_qlup_OBJECTS = test-qlup.$(OBJEXT)
test_qlup_OBJECTS = $(am_test_qlup_OBJECTS)
test_qlup_LDADD = $(LDADD)
test_qlup_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_randiter_nonzero_OBJECTS = test-randiter-nonzero.$(OBJEXT)
test_randiter_nonzero_OBJECTS = $(am_test_randiter_nonzero_OBJECTS)
test_randiter_nonzero_LDADD = $(LDADD)
test_randiter_nonzero_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_rank_OBJECTS = test-rank.$(OBJEXT)
test_rank_OBJECTS = $(am_test_rank_OBJECTS)
test_rank_LDADD = $(LDADD)
test_rank_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rat_charpoly_OBJECTS = test-rat-charpoly.$(OBJEXT)
test_rat_charpoly_OBJECTS = $(am_test_rat_charpoly_OBJECTS)
test_rat_charpoly_LDADD = $(LDADD)
test_rat_charpoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_rat_minpoly_OBJECTS = test-rat-minpoly.$(OBJEXT)
test_rat_minpoly_OBJECTS = $(am_test_rat_minpoly_OBJECTS)
test_rat_minpoly_LDADD = $(LDADD)
test_rat_minpoly_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_rat_solve_OBJECTS = test-rat-solve.$(OBJEXT)
test_rat_solve_OBJECTS = $(am_test_rat_solve_OBJECTS)
test_rat_solve_LDADD = $(LDADD)
test_rat_solve_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_rational_matrix_factory_OBJECTS =  \
	test-rational-matrix-factory.$(OBJEXT)
test_rational_matrix_factory_OBJECTS =  \
	$(am_test_rational_matrix_factory_OBJECTS)
test_rational_matrix_factory_LDADD = $(LDADD)
test_rational_matrix_factory_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_rational_reconstruction_base_OBJECTS =  \
	test-rational-reconstruction-base.$(OBJEXT)
test_rational_reconstruction_base_OBJECTS =  \
	$(am_test_rational_reconstruction_base_OBJECTS)
test_rational_reconstruction_base_LDADD = $(LDADD)
test_rational_reconstruction_base_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_rational_solver_OBJECTS = test-rational-solver.$(OBJEXT)
test_rational_solver_OBJECTS = $(am_test_rational_solver_OBJECTS)
test_rational_solver_LDADD = $(LDADD)
test_rational_solver_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_rational_solver_adaptive_OBJECTS =  \
	test-rational-solver-adaptive.$(OBJEXT)
test_rational_solver_adaptive_OBJECTS =  \
	$(am_test_rational_solver_adaptive_OBJECTS)
test_rational_solver_adaptive_LDADD = $(LDADD)
test_rational_solver_adaptive_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_scalar_matrix_OBJECTS = test-scalar-matrix.$(OBJEXT)
test_scalar_matrix_OBJECTS = $(am_test_scalar_matrix_OBJECTS)
test_scalar_matrix_LDADD = $(LDADD)
test_scalar_matrix_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_smith_form_OBJECTS = test-smith-form.$(OBJEXT)
test_smith_form_OBJECTS = $(am_test_smith_form_OBJECTS)
test_smith_form_LDADD = $(LDADD)
test_smith_form_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_smith_form_adaptive_OBJECTS =  \
	test-smith-form-adaptive.$(OBJEXT)
test_smith_form_adaptive_OBJECTS =  \
	$(am_test_smith_form_adaptive_OBJECTS)
test_smith_form_adaptive_LDADD = $(LDADD)
test_smith_form_adaptive_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_smith_form_binary_OBJECTS = test-smith-form-binary.$(OBJEXT)
test_smith_form_binary_OBJECTS = $(am_test_smith_form_binary_OBJECTS)
test_smith_form_binary_LDADD = $(LDADD)
test_smith_form_binary_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_smith_form_iliopoulos_OBJECTS =  \
	test-smith-form-iliopoulos.$(OBJEXT)
test_smith_form_iliopoulos_OBJECTS =  \
	$(am_test_smith_form_iliopoulos_OBJECTS)
test_smith_form_iliopoulos_LDADD = $(LDADD)
test_smith_form_iliopoulos_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_smith_form_local_OBJECTS = test-smith-form-local.$(OBJEXT)
test_smith_form_local_OBJECTS = $(am_test_smith_form_local_OBJECTS)
test_smith_form_local_LDADD = $(LDADD)
test_smith_form_local_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_solve_OBJECTS = test-solve.$(OBJEXT)
test_solve_OBJECTS = $(am_test_solve_OBJECTS)
test_solve_LDADD = $(LDADD)
test_solve_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_solve_nonsingular_OBJECTS = test-solve-nonsingular.$(OBJEXT)
test_solve_nonsingular_OBJECTS = $(am_test_solve_nonsingular_OBJECTS)
test_solve_nonsingular_LDADD = $(LDADD)
test_solve_nonsingular_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_sparse_OBJECTS = test-sparse.$(OBJEXT)
test_sparse_OBJECTS = $(am_test_sparse_OBJECTS)
test_sparse_LDADD = $(LDADD)
test_sparse_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_subiterator_OBJECTS = test-subiterator.$(OBJEXT)
test_subiterator_OBJECTS = $(am_test_subiterator_OBJECTS)
test_subiterator_LDADD = $(LDADD)
test_subiterator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_submatrix_OBJECTS = test-submatrix.$(OBJEXT)
test_submatrix_OBJECTS = $(am_test_submatrix_OBJECTS)
test_submatrix_LDADD = $(LDADD)
test_submatrix_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_subvector_OBJECTS = test-subvector.$(OBJEXT)
test_subvector_OBJECTS = $(am_test_subvector_OBJECTS)
test_subvector_LDADD = $(LDADD)
test_subvector_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_sum_OBJECTS = test-sum.$(OBJEXT)
test_sum_OBJECTS = $(am_test_sum_OBJECTS)
test_sum_LDADD = $(LDADD)
test_sum_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_toeplitz_det_OBJECTS = test-toeplitz-det.$(OBJEXT)
test_toeplitz_det_OBJECTS = $(am_test_toeplitz_det_OBJECTS)
test_toeplitz_det_LDADD = $(LDADD)
test_toeplitz_det_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_toom_cook_OBJECTS = test-toom-cook.$(OBJEXT)
test_toom_cook_OBJECTS = $(am_test_toom_cook_OBJECTS)
test_toom_cook_LDADD = $(LDADD)
test_toom_cook_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_trace_OBJECTS = test-trace.$(OBJEXT)
test_trace_OBJECTS = $(am_test_trace_OBJECTS)
test_trace_LDADD = $(LDADD)
test_trace_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_test_triplesbb_OBJECTS = test-triplesbb.$(OBJEXT)
test_triplesbb_OBJECTS = $(am_test_triplesbb_OBJECTS)
test_triplesbb_LDADD = $(LDADD)
test_triplesbb_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_unparametric_field_OBJECTS =  \
	test-unparametric-field.$(OBJEXT)
test_unparametric_field_OBJECTS =  \
	$(am_test_unparametric_field_OBJECTS)
test_unparametric_field_LDADD = $(LDADD)
test_unparametric_field_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_vector_domain_OBJECTS = test-vector-domain.$(OBJEXT)
test_vector_domain_OBJECTS = $(am_test_vector_domain_OBJECTS)
test_vector_domain_LDADD = $(LDADD)
test_vector_domain_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_zero_one_OBJECTS = test-zero-one.$(OBJEXT)
test_zero_one_OBJECTS = $(am_test_zero_one_OBJECTS)
test_zero_one_LDADD = $(LDADD)
test_zero_one_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_test_zo_OBJECTS = test-zo.$(OBJEXT)
test_zo_OBJECTS = $(am_test_zo_OBJECTS)
test_zo_LDADD = $(LDADD)
test_zo_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(benchmark_blas_domain_SOURCES) $(benchmark_fields_SOURCES) \
	$(test_PID_integer_SOURCES) $(test_bitonic_sort_SOURCES) \
	$(test_blackbox_block_container_SOURCES) \
	$(test_blas_domain_SOURCES) $(test_block_ring_SOURCES) \
	$(test_bmseq_SOURCES) $(test_butterfly_SOURCES) \
	$(test_charpoly_SOURCES) $(test_commentator_SOURCES) \
	$(test_companion_SOURCES) $(test_cra_SOURCES) \
	$(test_cradomain_SOURCES) $(test_dense_SOURCES) \
	$(test_dense_zero_one_SOURCES) $(test_det_SOURCES) \
	$(test_diagonal_SOURCES) $(test_dif_SOURCES) \
	$(test_direct_sum_SOURCES) $(test_dyadic_to_rational_SOURCES) \
	$(test_echelon_form_SOURCES) $(test_ffpack_SOURCES) \
	$(test_frobenius_SOURCES) $(test_ftrmm_SOURCES) \
	$(test_getentry_SOURCES) $(test_gf2_SOURCES) \
	$(test_givaro_fields_SOURCES) $(test_gmp_rational_SOURCES) \
	$(test_hilbert_SOURCES) $(test_hom_SOURCES) \
	$(test_inverse_SOURCES) $(test_isposdef_SOURCES) \
	$(test_ispossemidef_SOURCES) $(test_la_block_lanczos_SOURCES) \
	$(test_last_invariant_factor_SOURCES) \
	$(test_lidia_gfq_SOURCES) $(test_matrix_domain_SOURCES) \
	$(test_matrix_stream_SOURCES) $(test_mg_block_lanczos_SOURCES) \
	$(test_minpoly_SOURCES) $(test_modular_SOURCES) \
	$(test_modular_balanced_double_SOURCES) \
	$(test_modular_balanced_float_SOURCES) \
	$(test_modular_balanced_int_SOURCES) \
	$(test_modular_byte_SOURCES) $(test_modular_double_SOURCES) \
	$(test_modular_float_SOURCES) $(test_modular_int_SOURCES) \
	$(test_modular_short_SOURCES) $(test_moore_penrose_SOURCES) \
	$(test_ntl_RR_SOURCES) $(test_ntl_ZZ_p_SOURCES) \
	$(test_ntl_hankel_SOURCES) $(test_ntl_lzz_p_SOURCES) \
	$(test_ntl_sylvester_SOURCES) $(test_ntl_toeplitz_SOURCES) \
	$(test_nullspace_SOURCES) $(test_optimization_SOURCES) \
	$(test_param_fuzzy_SOURCES) $(test_qlup_SOURCES) \
	$(test_randiter_nonzero_SOURCES) $(test_rank_SOURCES) \
	$(test_rat_charpoly_SOURCES) $(test_rat_minpoly_SOURCES) \
	$(test_rat_solve_SOURCES) \
	$(test_rational_matrix_factory_SOURCES) \
	$(test_rational_reconstruction_base_SOURCES) \
	$(test_rational_solver_SOURCES) \
	$(test_rational_solver_adaptive_SOURCES) \
	$(test_scalar_matrix_SOURCES) $(test_smith_form_SOURCES) \
	$(test_smith_form_adaptive_SOURCES) \
	$(test_smith_form_binary_SOURCES) \
	$(test_smith_form_iliopoulos_SOURCES) \
	$(test_smith_form_local_SOURCES) $(test_solve_SOURCES) \
	$(test_solve_nonsingular_SOURCES) $(test_sparse_SOURCES) \
	$(test_subiterator_SOURCES) $(test_submatrix_SOURCES) \
	$(test_subvector_SOURCES) $(test_sum_SOURCES) \
	$(test_toeplitz_det_SOURCES) $(test_toom_cook_SOURCES) \
	$(test_trace_SOURCES) $(test_triplesbb_SOURCES) \
	$(test_unparametric_field_SOURCES) \
	$(test_vector_domain_SOURCES) $(test_zero_one_SOURCES) \
	$(test_zo_SOURCES)
DIST_SOURCES = $(benchmark_blas_domain_SOURCES) \
	$(benchmark_fields_SOURCES) $(test_PID_integer_SOURCES) \
	$(test_bitonic_sort_SOURCES) \
	$(test_blackbox_block_container_SOURCES) \
	$(test_blas_domain_SOURCES) $(test_block_ring_SOURCES) \
	$(test_bmseq_SOURCES) $(test_butterfly_SOURCES) \
	$(test_charpoly_SOURCES) $(test_commentator_SOURCES) \
	$(test_companion_SOURCES) $(test_cra_SOURCES) \
	$(test_cradomain_SOURCES) $(test_dense_SOURCES) \
	$(test_dense_zero_one_SOURCES) $(test_det_SOURCES) \
	$(test_diagonal_SOURCES) $(test_dif_SOURCES) \
	$(test_direct_sum_SOURCES) $(test_dyadic_to_rational_SOURCES) \
	$(test_echelon_form_SOURCES) $(test_ffpack_SOURCES) \
	$(test_frobenius_SOURCES) $(test_ftrmm_SOURCES) \
	$(test_getentry_SOURCES) $(test_gf2_SOURCES) \
	$(test_givaro_fields_SOURCES) $(test_gmp_rational_SOURCES) \
	$(test_hilbert_SOURCES) $(test_hom_SOURCES) \
	$(test_inverse_SOURCES) $(test_isposdef_SOURCES) \
	$(test_ispossemidef_SOURCES) $(test_la_block_lanczos_SOURCES) \
	$(test_last_invariant_factor_SOURCES) \
	$(test_lidia_gfq_SOURCES) $(test_matrix_domain_SOURCES) \
	$(test_matrix_stream_SOURCES) $(test_mg_block_lanczos_SOURCES) \
	$(test_minpoly_SOURCES) $(test_modular_SOURCES) \
	$(test_modular_balanced_double_SOURCES) \
	$(test_modular_balanced_float_SOURCES) \
	$(test_modular_balanced_int_SOURCES) \
	$(test_modular_byte_SOURCES) $(test_modular_double_SOURCES) \
	$(test_modular_float_SOURCES) $(test_modular_int_SOURCES) \
	$(test_modular_short_SOURCES) $(test_moore_penrose_SOURCES) \
	$(test_ntl_RR_SOURCES) $(test_ntl_ZZ_p_SOURCES) \
	$(test_ntl_hankel_SOURCES) $(test_ntl_lzz_p_SOURCES) \
	$(test_ntl_sylvester_SOURCES) $(test_ntl_toeplitz_SOURCES) \
	$(test_nullspace_SOURCES) $(test_optimization_SOURCES) \
	$(test_param_fuzzy_SOURCES) $(test_qlup_SOURCES) \
	$(test_randiter_nonzero_SOURCES) $(test_rank_SOURCES) \
	$(test_rat_charpoly_SOURCES) $(test_rat_minpoly_SOURCES) \
	$(test_rat_solve_SOURCES) \
	$(test_rational_matrix_factory_SOURCES) \
	$(test_rational_reconstruction_base_SOURCES) \
	$(test_rational_solver_SOURCES) \
	$(test_rational_solver_adaptive_SOURCES) \
	$(test_scalar_matrix_SOURCES) $(test_smith_form_SOURCES) \
	$(test_smith_form_adaptive_SOURCES) \
	$(test_smith_form_binary_SOURCES) \
	$(test_smith_form_iliopoulos_SOURCES) \
	$(test_smith_form_local_SOURCES) $(test_solve_SOURCES) \
	$(test_solve_nonsingular_SOURCES) $(test_sparse_SOURCES) \
	$(test_subiterator_SOURCES) $(test_submatrix_SOURCES) \
	$(test_subvector_SOURCES) $(test_sum_SOURCES) \
	$(test_toeplitz_det_SOURCES) $(test_toom_cook_SOURCES) \
	$(test_trace_SOURCES) $(test_triplesbb_SOURCES) \
	$(test_unparametric_field_SOURCES) \
	$(test_vector_domain_SOURCES) $(test_zero_one_SOURCES) \
	$(test_zo_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
@LINBOX_HAVE_GIVARO_TRUE@am__EXEEXT_13 = $(am__EXEEXT_2)
@LINBOX_HAVE_NTL_TRUE@am__EXEEXT_14 = $(am__EXEEXT_3)
@LINBOX_HAVE_LIDIA_TRUE@am__EXEEXT_15 = $(am__EXEEXT_5)
am__EXEEXT_16 =
am__EXEEXT_17 = $(am__EXEEXT_4)
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BLAS_CFLAGS = @BLAS_CFLAGS@
BLAS_LIBS = @BLAS_LIBS@
CC = @CC@
CCNAM = @CCNAM@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DBG = @DBG@
DEBUG_CFLAGS = @DEBUG_CFLAGS@
DEFAULT_CFLAGS = @DEFAULT_CFLAGS@
DEFS = @DEFS@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
EXPAT_CFLAGS = @EXPAT_CFLAGS@
EXPAT_LIBS = @EXPAT_LIBS@
FFLAS_FFPACK_CFLAGS = @FFLAS_FFPACK_CFLAGS@
FFLAS_FFPACK_LIBS = @FFLAS_FFPACK_LIBS@
FFLAS_FFPACK_LOC = @FFLAS_FFPACK_LOC@
FGREP = @FGREP@
FPLLL_CFLAGS = @FPLLL_CFLAGS@
FPLLL_LIBS = @FPLLL_LIBS@
GIVARO_CFLAGS = @GIVARO_CFLAGS@
GIVARO_LIBS = @GIVARO_LIBS@
GMP_CFLAGS = @GMP_CFLAGS@
GMP_LIBS = @GMP_LIBS@
GMP_VERSION = @GMP_VERSION@
GREP = @GREP@
IML_CFLAGS = @IML_CFLAGS@
IML_LIBS = @IML_LIBS@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIDIA_CFLAGS = @LIDIA_CFLAGS@
LIDIA_LIBS = @LIDIA_LIBS@
LINBOX_BENCH_PATH = @LINBOX_BENCH_PATH@
LINBOX_DOC_PATH = @LINBOX_DOC_PATH@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
M4RIE_CFLAGS = @M4RIE_CFLAGS@
M4RIE_LIBS = @M4RIE_LIBS@
M4RI_CFLAGS = @M4RI_CFLAGS@
M4RI_LIBS = @M4RI_LIBS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MAPLE_CFLAGS = @MAPLE_CFLAGS@
MAPLE_HOME = @MAPLE_HOME@
MAPLE_LIBS = @MAPLE_LIBS@
MAPLE_VERSION = @MAPLE_VERSION@
MKDIR_P = @MKDIR_P@
MPFR_CFLAGS = @MPFR_CFLAGS@
MPFR_LIBS = @MPFR_LIBS@
NM = @NM@
NMEDIT = @NMEDIT@
NTL_CFLAGS = @NTL_CFLAGS@
NTL_LIBS = @NTL_LIBS@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PROF = @PROF@
RANLIB = @RANLIB@
RM = @RM@
SACLIB_CFLAGS = @SACLIB_CFLAGS@
SACLIB_LIBS = @SACLIB_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TESTS_CFLAGS = @TESTS_CFLAGS@
VERSION = @VERSION@
WARN = @WARN@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -I$(top_srcdir) -I$(top_srcdir)/linbox $(CBLAS_FLAG) \
	$(FFLAS_FFPACK_CFLAGS) $(GMP_CFLAGS) $(NTL_CFLAGS) \
	$(GIVARO_CFLAGS) $(LIDIA_CFLAGS) $(IML_CFLAGS)
# AM_LDFLAGS = -llapack -lcblas -latlas
AM_LDFLAGS = $(top_srcdir)/linbox/.libs/liblinbox.a
#  SAFER_FLAGS = -g -Wall -Wextra -Wno-unused-parameter
# bds: no need to optimize for unit/regression tests, and opt adds a lot to compilation time
#AM_CXXFLAGS = @TESTS_CFLAGS@ -DLinBoxSrcOnly
#  AM_CXXFLAGS = $(SAFER_FLAGS) -DLinBoxSrcOnly
#AM_CXXFLAGS = $(SAFER_FLAGS) -DLinBoxSrcOnly -O2
#  AM_CXXFLAGS = -g -DLinBoxSrcOnly -Wall -DDEBUG -O0
AM_CXXFLAGS = -DLinBoxSrcOnly  @TESTS_CFLAGS@ @DEBUG_CFLAGS@
# AM_CXXFLAGS = -g -DLinBoxSrcOnly -Wall -D__LINBOX_HAVE_DGETRF -D__LINBOX_HAVE_DGETRI
# AM_CFLAGS = -g -Wall
SUBDIRS = data matrix
LDADD = $(GIVARO_LIBS) $(BLAS_LIBS) $(NTL_LIBS)  $(GMP_LIBS) $(LIDIA_LIBS) $(MPFR_LIBS) $(FPLLL_LIBS)  $(IML_LIBS) $(LDFLAGS)
#  AM_LDFLAGS+=-static -Wl,-rpath -Wl,$(GIVARO_LIBS)
EXTRA_DIST = \
		test-common.C  \
		tests.doxy     \
		checker.C


#  test-generic-for-quad.h

# Put an entry for your test-mycomponent.C here (or in one of the other test groups).
# Don't forget to add a test_mycomponent_SOURCES entry below.
#
# Once present, tests should remain present, being moved from one group to another.
# Note that among the available groups are NONCOMPILING_TESTS and FAILING_TESTS, which
# will be ignored by "make check" and can be temporary storage for problematic tests.
BASIC_TESTS = \
        test-commentator              \
        test-det                      \
        test-frobenius                \
        test-rank                     \
        test-solve                    \
        test-nullspace                \
        test-smith-form-binary        \
        test-rational-solver          \
        test-rational-solver-adaptive \
        test-charpoly                 \
        test-cra

FULLCHECK_TESTS = \
        test-bitonic-sort             \
	test-blackbox-block-container \
        test-blas-domain              \
        test-butterfly                \
        test-companion                \
        test-dense                    \
        test-diagonal                 \
        test-dif                      \
        test-direct-sum               \
        test-echelon-form             \
        test-ffpack                   \
        test-getentry                 \
        test-gf2                      \
        test-gmp-rational             \
        test-hilbert                  \
        test-hom                      \
        test-inverse                  \
        test-isposdef                 \
        test-ispossemidef             \
        test-matrix-domain            \
        test-matrix-stream            \
        test-minpoly                  \
        test-modular                  \
        test-modular-balanced-int     \
        test-modular-balanced-float   \
        test-modular-balanced-double  \
        test-modular-byte             \
        test-modular-double           \
        test-modular-float            \
        test-modular-int              \
        test-modular-short            \
        test-block-ring               \
        test-PID-integer              \
        test-moore-penrose            \
        test-randiter-nonzero         \
        test-rational-matrix-factory  \
        test-scalar-matrix            \
	test-solve-nonsingular        \
        test-sparse                   \
        test-subiterator              \
        test-submatrix                \
        test-subvector                \
        test-sum                      \
        test-trace                    \
        test-triplesbb                \
        test-vector-domain            \
        test-qlup                     \
        test-zero-one                 \
        test-last-invariant-factor    \
        test-cradomain                \
		test-rational-reconstruction-base


#  test-integer-tools

# tests of components not adhering to LinBox requirements.
NONCOMPLIANT_TESTS = \
        test-ntl-RR                    \
        test-param-fuzzy


#These need clapack
#test-rational-solver-adaptive
DUBIOUS_TESTS = \
	test-unparametric-field       \
	test-bmseq		\
		test-zo

#  test-quad-matrix
NONCOMPILING_TESTS = \
        test-dense-zero-one

FAILING_TESTS = \
        test-rat-charpoly        \
		test-rat-solve           \
		test-rat-minpoly         \
		test-smith-form-local    \
		test-smith-form-adaptive \
		test-dyadic-to-rational  \
		test-mg-block-lanczos    \
		test-ftrmm               \
        test-la-block-lanczos

USE_NONCOMPILING_TESTS = 
USE_FAILING_TESTS = 
# comment out these two lines to avoid facing reality
#USE_NONCOMPILING_TESTS += $(NONCOMPILING_TESTS)
#USE_FAILING_TESTS += $(FAILING_TESTS)

# a benchmarker, not to be included in check.
BENCHMARKS = \
        benchmark-fields        \
        benchmark-blas-domain


# historical tests, no longer in use
#        test-nag-sparse                  replaced by tripplesbb
#       test-lsp         lsp.h superceded by factorized-matrix.h
# removed test
#        test-nag-sparse
#        test-image-field       replaced by hom
#       test-lsp
# I put test-gssv_rank in hmrg:~saunders/gen_superlu.  It is not linbox until and unless it is made to work
# test-gssv is an ntl test

# no explicit test needed, I guess...
#        Transpose is tested in test-triplesbb
#        Compose is tested in test-butterfly
GIVARO_TESTS = \
        test-givaro-fields

NTL_TESTS = \
        test-smith-form               \
        test-ntl-lzz_p                \
        test-ntl-ZZ_p                 \
        test-ntl-toeplitz             \
        test-ntl-hankel               \
        test-ntl-sylvester            \
        test-smith-form-iliopoulos    \
        test-toeplitz-det

LIDIA_TESTS = \
        test-lidia-gfq

ATLAS_TESTS = \
        test-optimization

BLAS3_UNIT_TESTS = \
		   test-toom-cook

@LINBOX_HAVE_NTL_TRUE@USE_NTL_TESTS = $(NTL_TESTS)
@LINBOX_HAVE_GIVARO_TRUE@USE_GIVARO_TESTS = $(GIVARO_TESTS)
@LINBOX_HAVE_LIDIA_TRUE@USE_LIDIA_TESTS = $(LIDIA_TESTS)
USE_ATLAS_TESTS = $(ATLAS_TESTS)
test_commentator_SOURCES = \
        test-commentator.C                \
        test-common.h

test_modular_SOURCES = \
        test-modular.C                        \
        test-generic.h                        \
        test-common.h

test_blackbox_block_container_SOURCES = \
	test-blackbox-block-container.C    \
	test-common.h

test_solve_nonsingular_SOURCES = \
	test-solve-nonsingular.C   \
	test-common.h

test_block_ring_SOURCES = \
        test-block-ring.C                 \
        test-field.h                      \
        test-common.h

test_PID_integer_SOURCES = \
        test-PID-integer.C                 \
        test-field.h                      \
        test-common.h

test_hom_SOURCES = \
        test-hom.C                        \
        test-generic.h                    \
        test-common.h

test_gf2_SOURCES = \
        test-gf2.C                        \
        test-generic.h                    \
        test-common.h

test_gmp_rational_SOURCES = \
        test-gmp-rational.C               \
        test-generic.h                    \
        test-common.h

test_unparametric_field_SOURCES = \
        test-unparametric-field.C        \
        test-generic.h                   \
        test-common.h

test_randiter_nonzero_SOURCES = \
        test-randiter-nonzero.C          \
        test-common.h

test_rational_matrix_factory_SOURCES = \
        test-rational-matrix-factory.C  \
        test-common.h

test_rational_reconstruction_base_SOURCES = \
	  test-rational-reconstruction-base.C  \
	  test-common.h

test_rat_solve_SOURCES = \
        test-rat-solve.C                \
        test-common.h

test_rat_charpoly_SOURCES = \
        test-rat-charpoly.C             \
        test-common.h

test_rat_minpoly_SOURCES = \
        test-rat-minpoly.C              \
        test-common.h

test_subiterator_SOURCES = \
        test-subiterator.C              \
        test-common.h

test_subvector_SOURCES = \
        test-subvector.C                \
        test-common.h

test_vector_domain_SOURCES = \
        test-vector-domain.C            \
        test-vector-domain.h

test_matrix_domain_SOURCES = \
        test-matrix-domain.C            \
        test-common.h

test_dense_SOURCES = \
        test-dense.C                    \
        test-common.h

test_sparse_SOURCES = \
        test-sparse.C                   \
        test-common.h

test_submatrix_SOURCES = \
        test-submatrix.C                \
        test-common.h

test_scalar_matrix_SOURCES = \
        test-scalar-matrix.C            \
        test-generic.h                  \
        test-common.h

test_bmseq_SOURCES = \
        test-bmseq.C            \
        test-common.h

test_butterfly_SOURCES = \
        test-vector-domain.h            \
        test-blackbox.h                 \
        test-butterfly.C                \
        test-generic.h                  \
        test-common.h

test_charpoly_SOURCES = \
        test-charpoly.C                 \
        test-common.h

test_diagonal_SOURCES = \
        test-diagonal.C                 \
        test-generic.h                  \
        test-common.h

test_sum_SOURCES = \
        test-sum.C                      \
        test-generic.h                  \
        test-common.h

test_dif_SOURCES = \
        test-dif.C        test-generic.h    \
        test-common.h

test_triplesbb_SOURCES = \
        test-triplesbb.C                \
        test-generic.h                  \
        test-common.h

test_hilbert_SOURCES = \
        test-hilbert.C        test-generic.h        \
        test-common.h

test_ntl_toeplitz_SOURCES = \
        test-ntl-toeplitz.C                \
        test-common.h

test_ntl_hankel_SOURCES = \
        test-ntl-hankel.C                \
        test-common.h

test_ntl_sylvester_SOURCES = \
        test-ntl-sylvester.C                \
        test-common.h

test_toeplitz_det_SOURCES = \
        test-toeplitz-det.C

test_trace_SOURCES = \
        test-trace.C                         \
        test-common.h

test_getentry_SOURCES = \
        test-getentry.C                         \
        test-common.h

test_minpoly_SOURCES = \
        test-minpoly.C                         \
        test-common.h

test_det_SOURCES = \
        test-det.C                        \
        test-common.h

test_rank_SOURCES = \
        test-rank.C                        \
        test-common.h

test_qlup_SOURCES = \
        test-qlup.C                        \
        test-common.h

test_solve_SOURCES = \
        test-solve.C                        \
        test-common.h

test_direct_sum_SOURCES = \
        test-direct-sum.C                \
        test-generic.h                   \
        test-common.h

test_echelon_form_SOURCES = \
        test-echelon-form.C                \
        test-common.h

test_frobenius_SOURCES = \
        test-frobenius.C                \
        test-generic.h                  \
        test-common.h

test_companion_SOURCES = \
        test-companion.C                \
        test-generic.h                  \
        test-common.h

test_inverse_SOURCES = \
        test-inverse.C                        \
        test-common.h

test_moore_penrose_SOURCES = \
        test-moore-penrose.C                \
        test-common.h

test_ntl_RR_SOURCES = \
        test-ntl-RR.C                        \
        test-generic.h                       \
        test-common.h

test_ntl_ZZ_p_SOURCES = \
        test-ntl-ZZ_p.C                        \
        test-generic.h                         \
        test-common.h

test_ntl_lzz_p_SOURCES = \
        test-ntl-lzz_p.C                \
        test-generic.h                  \
        test-common.h

test_givaro_fields_SOURCES = \
        test-givaro-fields.C                \
        test-generic.h                   \
        test-common.h

test_lidia_gfq_SOURCES = \
        test-lidia-gfq.C                \
        test-generic.h                  \
        test-common.h

test_param_fuzzy_SOURCES = \
        test-param-fuzzy.C                \
        test-generic.h                    \
        test-common.h


#  test_quad_matrix_SOURCES =                \
#  test-quad-matrix.C                \
#  test-generic-for-quad.h           \
#  test-generic.h                    \
#  test-common.h
test_zo_SOURCES = \
        test-zo.C                        \
        test-generic.h                   \
        test-common.h

test_zero_one_SOURCES = \
        test-zero-one.C                       \
        test-generic.h                        \
        test-common.h

test_modular_int_SOURCES = \
        test-modular-int.C                \
        test-common.h

test_modular_short_SOURCES = \
        test-modular-short.C                \
        test-generic.h                      \
        test-common.h

test_modular_double_SOURCES = \
        test-modular-double.C                \
        test-generic.h                       \
        test-common.h

test_modular_float_SOURCES = \
        test-modular-float.C                \
        test-generic.h                       \
        test-common.h

test_modular_byte_SOURCES = \
        test-modular-byte.C          \
        test-generic.h               \
        test-common.h

test_modular_balanced_int_SOURCES = \
        test-modular-balanced-int.C  \
        test-generic.h               \
        test-common.h

test_modular_balanced_double_SOURCES = \
        test-modular-balanced-double.C  \
        test-generic.h               \
        test-common.h

test_modular_balanced_float_SOURCES = \
        test-modular-balanced-float.C  \
        test-generic.h               \
        test-common.h

test_smith_form_iliopoulos_SOURCES = \
        test-common.h                \
        test-smith-form-iliopoulos.C

test_smith_form_binary_SOURCES = \
        test-common.h            \
        test-smith-form-binary.C

test_smith_form_SOURCES = \
        test-common.h       \
        test-smith-form.C

test_last_invariant_factor_SOURCES = \
        test-common.h                  \
        test-last-invariant-factor.C

test_smith_form_local_SOURCES = \
        test-common.h             \
        test-smith-form-local.C

test_optimization_SOURCES = \
        test-common.h         \
        test-optimization.C

test_nullspace_SOURCES = \
        test-common.h      \
        test-nullspace.C

test_bitonic_sort_SOURCES = \
        test-common.h                   \
        test-bitonic-sort.C

test_rational_solver_SOURCES = \
        test-common.h                   \
        test-rational-solver.C

test_blas_domain_SOURCES = \
        test-common.h                   \
        test-blas-domain.C

test_ffpack_SOURCES = \
        test-common.h                   \
        test-ffpack.C

test_matrix_stream_SOURCES = \
        test-matrix-stream.C

test_la_block_lanczos_SOURCES = \
        test-la-block-lanczos.C

test_mg_block_lanczos_SOURCES = \
        test-mg-block-lanczos.C

test_rational_solver_adaptive_SOURCES = \
        test-rational-solver-adaptive.C \
        test-common.h

test_dyadic_to_rational_SOURCES = \
        test-dyadic-to-rational.C \
        test-common.h

test_cra_SOURCES = \
        test-cra.C                      \
        test-common.h

test_cradomain_SOURCES = \
        test-cradomain.C                \
        test-common.h


# NTL test
test_smith_form_adaptive_SOURCES = \
        test-common.h                  \
        test-smith-form-adaptive.C

benchmark_fields_SOURCES = \
        test-common.h                  \
        benchmark-fields.C

benchmark_blas_domain_SOURCES = \
        test-common.h                  \
        benchmark-blas-domain.C

test_isposdef_SOURCES = \
        test-common.h                  \
        test-isposdef.C

test_dense_zero_one_SOURCES = \
        test-blackbox.h                \
        test-dense-zero-one.C

test_ispossemidef_SOURCES = \
        test-common.h                 \
        test-ispossemidef.C

test_ftrmm_SOURCES = \
		test-ftrmm.C

test_toom_cook_SOURCES = test-toom-cook.C
CLEANFILES = checker               \
			$(TESTS)              \
			$(BASIC_TESTS)        \
			$(FAILING_TESTS)      \
			$(NONCOMPLIANT_TESTS) \
			$(BENCHMARKS)         \
			$(DUBIOUS_TESTS)      \
			$(FULLCHECK_TESTS)      \
			$(NTL_TESTS)          \
			$(GIVARO_TESTS)       \
			$(ATLAS_TESTS)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .C .lo .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu --ignore-deps tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu --ignore-deps tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
benchmark-blas-domain$(EXEEXT): $(benchmark_blas_domain_OBJECTS) $(benchmark_blas_domain_DEPENDENCIES) $(EXTRA_benchmark_blas_domain_DEPENDENCIES) 
	@rm -f benchmark-blas-domain$(EXEEXT)
	$(CXXLINK) $(benchmark_blas_domain_OBJECTS) $(benchmark_blas_domain_LDADD) $(LIBS)
benchmark-fields$(EXEEXT): $(benchmark_fields_OBJECTS) $(benchmark_fields_DEPENDENCIES) $(EXTRA_benchmark_fields_DEPENDENCIES) 
	@rm -f benchmark-fields$(EXEEXT)
	$(CXXLINK) $(benchmark_fields_OBJECTS) $(benchmark_fields_LDADD) $(LIBS)
test-PID-integer$(EXEEXT): $(test_PID_integer_OBJECTS) $(test_PID_integer_DEPENDENCIES) $(EXTRA_test_PID_integer_DEPENDENCIES) 
	@rm -f test-PID-integer$(EXEEXT)
	$(CXXLINK) $(test_PID_integer_OBJECTS) $(test_PID_integer_LDADD) $(LIBS)
test-bitonic-sort$(EXEEXT): $(test_bitonic_sort_OBJECTS) $(test_bitonic_sort_DEPENDENCIES) $(EXTRA_test_bitonic_sort_DEPENDENCIES) 
	@rm -f test-bitonic-sort$(EXEEXT)
	$(CXXLINK) $(test_bitonic_sort_OBJECTS) $(test_bitonic_sort_LDADD) $(LIBS)
test-blackbox-block-container$(EXEEXT): $(test_blackbox_block_container_OBJECTS) $(test_blackbox_block_container_DEPENDENCIES) $(EXTRA_test_blackbox_block_container_DEPENDENCIES) 
	@rm -f test-blackbox-block-container$(EXEEXT)
	$(CXXLINK) $(test_blackbox_block_container_OBJECTS) $(test_blackbox_block_container_LDADD) $(LIBS)
test-blas-domain$(EXEEXT): $(test_blas_domain_OBJECTS) $(test_blas_domain_DEPENDENCIES) $(EXTRA_test_blas_domain_DEPENDENCIES) 
	@rm -f test-blas-domain$(EXEEXT)
	$(CXXLINK) $(test_blas_domain_OBJECTS) $(test_blas_domain_LDADD) $(LIBS)
test-block-ring$(EXEEXT): $(test_block_ring_OBJECTS) $(test_block_ring_DEPENDENCIES) $(EXTRA_test_block_ring_DEPENDENCIES) 
	@rm -f test-block-ring$(EXEEXT)
	$(CXXLINK) $(test_block_ring_OBJECTS) $(test_block_ring_LDADD) $(LIBS)
test-bmseq$(EXEEXT): $(test_bmseq_OBJECTS) $(test_bmseq_DEPENDENCIES) $(EXTRA_test_bmseq_DEPENDENCIES) 
	@rm -f test-bmseq$(EXEEXT)
	$(CXXLINK) $(test_bmseq_OBJECTS) $(test_bmseq_LDADD) $(LIBS)
test-butterfly$(EXEEXT): $(test_butterfly_OBJECTS) $(test_butterfly_DEPENDENCIES) $(EXTRA_test_butterfly_DEPENDENCIES) 
	@rm -f test-butterfly$(EXEEXT)
	$(CXXLINK) $(test_butterfly_OBJECTS) $(test_butterfly_LDADD) $(LIBS)
test-charpoly$(EXEEXT): $(test_charpoly_OBJECTS) $(test_charpoly_DEPENDENCIES) $(EXTRA_test_charpoly_DEPENDENCIES) 
	@rm -f test-charpoly$(EXEEXT)
	$(CXXLINK) $(test_charpoly_OBJECTS) $(test_charpoly_LDADD) $(LIBS)
test-commentator$(EXEEXT): $(test_commentator_OBJECTS) $(test_commentator_DEPENDENCIES) $(EXTRA_test_commentator_DEPENDENCIES) 
	@rm -f test-commentator$(EXEEXT)
	$(CXXLINK) $(test_commentator_OBJECTS) $(test_commentator_LDADD) $(LIBS)
test-companion$(EXEEXT): $(test_companion_OBJECTS) $(test_companion_DEPENDENCIES) $(EXTRA_test_companion_DEPENDENCIES) 
	@rm -f test-companion$(EXEEXT)
	$(CXXLINK) $(test_companion_OBJECTS) $(test_companion_LDADD) $(LIBS)
test-cra$(EXEEXT): $(test_cra_OBJECTS) $(test_cra_DEPENDENCIES) $(EXTRA_test_cra_DEPENDENCIES) 
	@rm -f test-cra$(EXEEXT)
	$(CXXLINK) $(test_cra_OBJECTS) $(test_cra_LDADD) $(LIBS)
test-cradomain$(EXEEXT): $(test_cradomain_OBJECTS) $(test_cradomain_DEPENDENCIES) $(EXTRA_test_cradomain_DEPENDENCIES) 
	@rm -f test-cradomain$(EXEEXT)
	$(CXXLINK) $(test_cradomain_OBJECTS) $(test_cradomain_LDADD) $(LIBS)
test-dense$(EXEEXT): $(test_dense_OBJECTS) $(test_dense_DEPENDENCIES) $(EXTRA_test_dense_DEPENDENCIES) 
	@rm -f test-dense$(EXEEXT)
	$(CXXLINK) $(test_dense_OBJECTS) $(test_dense_LDADD) $(LIBS)
test-dense-zero-one$(EXEEXT): $(test_dense_zero_one_OBJECTS) $(test_dense_zero_one_DEPENDENCIES) $(EXTRA_test_dense_zero_one_DEPENDENCIES) 
	@rm -f test-dense-zero-one$(EXEEXT)
	$(CXXLINK) $(test_dense_zero_one_OBJECTS) $(test_dense_zero_one_LDADD) $(LIBS)
test-det$(EXEEXT): $(test_det_OBJECTS) $(test_det_DEPENDENCIES) $(EXTRA_test_det_DEPENDENCIES) 
	@rm -f test-det$(EXEEXT)
	$(CXXLINK) $(test_det_OBJECTS) $(test_det_LDADD) $(LIBS)
test-diagonal$(EXEEXT): $(test_diagonal_OBJECTS) $(test_diagonal_DEPENDENCIES) $(EXTRA_test_diagonal_DEPENDENCIES) 
	@rm -f test-diagonal$(EXEEXT)
	$(CXXLINK) $(test_diagonal_OBJECTS) $(test_diagonal_LDADD) $(LIBS)
test-dif$(EXEEXT): $(test_dif_OBJECTS) $(test_dif_DEPENDENCIES) $(EXTRA_test_dif_DEPENDENCIES) 
	@rm -f test-dif$(EXEEXT)
	$(CXXLINK) $(test_dif_OBJECTS) $(test_dif_LDADD) $(LIBS)
test-direct-sum$(EXEEXT): $(test_direct_sum_OBJECTS) $(test_direct_sum_DEPENDENCIES) $(EXTRA_test_direct_sum_DEPENDENCIES) 
	@rm -f test-direct-sum$(EXEEXT)
	$(CXXLINK) $(test_direct_sum_OBJECTS) $(test_direct_sum_LDADD) $(LIBS)
test-dyadic-to-rational$(EXEEXT): $(test_dyadic_to_rational_OBJECTS) $(test_dyadic_to_rational_DEPENDENCIES) $(EXTRA_test_dyadic_to_rational_DEPENDENCIES) 
	@rm -f test-dyadic-to-rational$(EXEEXT)
	$(CXXLINK) $(test_dyadic_to_rational_OBJECTS) $(test_dyadic_to_rational_LDADD) $(LIBS)
test-echelon-form$(EXEEXT): $(test_echelon_form_OBJECTS) $(test_echelon_form_DEPENDENCIES) $(EXTRA_test_echelon_form_DEPENDENCIES) 
	@rm -f test-echelon-form$(EXEEXT)
	$(CXXLINK) $(test_echelon_form_OBJECTS) $(test_echelon_form_LDADD) $(LIBS)
test-ffpack$(EXEEXT): $(test_ffpack_OBJECTS) $(test_ffpack_DEPENDENCIES) $(EXTRA_test_ffpack_DEPENDENCIES) 
	@rm -f test-ffpack$(EXEEXT)
	$(CXXLINK) $(test_ffpack_OBJECTS) $(test_ffpack_LDADD) $(LIBS)
test-frobenius$(EXEEXT): $(test_frobenius_OBJECTS) $(test_frobenius_DEPENDENCIES) $(EXTRA_test_frobenius_DEPENDENCIES) 
	@rm -f test-frobenius$(EXEEXT)
	$(CXXLINK) $(test_frobenius_OBJECTS) $(test_frobenius_LDADD) $(LIBS)
test-ftrmm$(EXEEXT): $(test_ftrmm_OBJECTS) $(test_ftrmm_DEPENDENCIES) $(EXTRA_test_ftrmm_DEPENDENCIES) 
	@rm -f test-ftrmm$(EXEEXT)
	$(CXXLINK) $(test_ftrmm_OBJECTS) $(test_ftrmm_LDADD) $(LIBS)
test-getentry$(EXEEXT): $(test_getentry_OBJECTS) $(test_getentry_DEPENDENCIES) $(EXTRA_test_getentry_DEPENDENCIES) 
	@rm -f test-getentry$(EXEEXT)
	$(CXXLINK) $(test_getentry_OBJECTS) $(test_getentry_LDADD) $(LIBS)
test-gf2$(EXEEXT): $(test_gf2_OBJECTS) $(test_gf2_DEPENDENCIES) $(EXTRA_test_gf2_DEPENDENCIES) 
	@rm -f test-gf2$(EXEEXT)
	$(CXXLINK) $(test_gf2_OBJECTS) $(test_gf2_LDADD) $(LIBS)
test-givaro-fields$(EXEEXT): $(test_givaro_fields_OBJECTS) $(test_givaro_fields_DEPENDENCIES) $(EXTRA_test_givaro_fields_DEPENDENCIES) 
	@rm -f test-givaro-fields$(EXEEXT)
	$(CXXLINK) $(test_givaro_fields_OBJECTS) $(test_givaro_fields_LDADD) $(LIBS)
test-gmp-rational$(EXEEXT): $(test_gmp_rational_OBJECTS) $(test_gmp_rational_DEPENDENCIES) $(EXTRA_test_gmp_rational_DEPENDENCIES) 
	@rm -f test-gmp-rational$(EXEEXT)
	$(CXXLINK) $(test_gmp_rational_OBJECTS) $(test_gmp_rational_LDADD) $(LIBS)
test-hilbert$(EXEEXT): $(test_hilbert_OBJECTS) $(test_hilbert_DEPENDENCIES) $(EXTRA_test_hilbert_DEPENDENCIES) 
	@rm -f test-hilbert$(EXEEXT)
	$(CXXLINK) $(test_hilbert_OBJECTS) $(test_hilbert_LDADD) $(LIBS)
test-hom$(EXEEXT): $(test_hom_OBJECTS) $(test_hom_DEPENDENCIES) $(EXTRA_test_hom_DEPENDENCIES) 
	@rm -f test-hom$(EXEEXT)
	$(CXXLINK) $(test_hom_OBJECTS) $(test_hom_LDADD) $(LIBS)
test-inverse$(EXEEXT): $(test_inverse_OBJECTS) $(test_inverse_DEPENDENCIES) $(EXTRA_test_inverse_DEPENDENCIES) 
	@rm -f test-inverse$(EXEEXT)
	$(CXXLINK) $(test_inverse_OBJECTS) $(test_inverse_LDADD) $(LIBS)
test-isposdef$(EXEEXT): $(test_isposdef_OBJECTS) $(test_isposdef_DEPENDENCIES) $(EXTRA_test_isposdef_DEPENDENCIES) 
	@rm -f test-isposdef$(EXEEXT)
	$(CXXLINK) $(test_isposdef_OBJECTS) $(test_isposdef_LDADD) $(LIBS)
test-ispossemidef$(EXEEXT): $(test_ispossemidef_OBJECTS) $(test_ispossemidef_DEPENDENCIES) $(EXTRA_test_ispossemidef_DEPENDENCIES) 
	@rm -f test-ispossemidef$(EXEEXT)
	$(CXXLINK) $(test_ispossemidef_OBJECTS) $(test_ispossemidef_LDADD) $(LIBS)
test-la-block-lanczos$(EXEEXT): $(test_la_block_lanczos_OBJECTS) $(test_la_block_lanczos_DEPENDENCIES) $(EXTRA_test_la_block_lanczos_DEPENDENCIES) 
	@rm -f test-la-block-lanczos$(EXEEXT)
	$(CXXLINK) $(test_la_block_lanczos_OBJECTS) $(test_la_block_lanczos_LDADD) $(LIBS)
test-last-invariant-factor$(EXEEXT): $(test_last_invariant_factor_OBJECTS) $(test_last_invariant_factor_DEPENDENCIES) $(EXTRA_test_last_invariant_factor_DEPENDENCIES) 
	@rm -f test-last-invariant-factor$(EXEEXT)
	$(CXXLINK) $(test_last_invariant_factor_OBJECTS) $(test_last_invariant_factor_LDADD) $(LIBS)
test-lidia-gfq$(EXEEXT): $(test_lidia_gfq_OBJECTS) $(test_lidia_gfq_DEPENDENCIES) $(EXTRA_test_lidia_gfq_DEPENDENCIES) 
	@rm -f test-lidia-gfq$(EXEEXT)
	$(CXXLINK) $(test_lidia_gfq_OBJECTS) $(test_lidia_gfq_LDADD) $(LIBS)
test-matrix-domain$(EXEEXT): $(test_matrix_domain_OBJECTS) $(test_matrix_domain_DEPENDENCIES) $(EXTRA_test_matrix_domain_DEPENDENCIES) 
	@rm -f test-matrix-domain$(EXEEXT)
	$(CXXLINK) $(test_matrix_domain_OBJECTS) $(test_matrix_domain_LDADD) $(LIBS)
test-matrix-stream$(EXEEXT): $(test_matrix_stream_OBJECTS) $(test_matrix_stream_DEPENDENCIES) $(EXTRA_test_matrix_stream_DEPENDENCIES) 
	@rm -f test-matrix-stream$(EXEEXT)
	$(CXXLINK) $(test_matrix_stream_OBJECTS) $(test_matrix_stream_LDADD) $(LIBS)
test-mg-block-lanczos$(EXEEXT): $(test_mg_block_lanczos_OBJECTS) $(test_mg_block_lanczos_DEPENDENCIES) $(EXTRA_test_mg_block_lanczos_DEPENDENCIES) 
	@rm -f test-mg-block-lanczos$(EXEEXT)
	$(CXXLINK) $(test_mg_block_lanczos_OBJECTS) $(test_mg_block_lanczos_LDADD) $(LIBS)
test-minpoly$(EXEEXT): $(test_minpoly_OBJECTS) $(test_minpoly_DEPENDENCIES) $(EXTRA_test_minpoly_DEPENDENCIES) 
	@rm -f test-minpoly$(EXEEXT)
	$(CXXLINK) $(test_minpoly_OBJECTS) $(test_minpoly_LDADD) $(LIBS)
test-modular$(EXEEXT): $(test_modular_OBJECTS) $(test_modular_DEPENDENCIES) $(EXTRA_test_modular_DEPENDENCIES) 
	@rm -f test-modular$(EXEEXT)
	$(CXXLINK) $(test_modular_OBJECTS) $(test_modular_LDADD) $(LIBS)
test-modular-balanced-double$(EXEEXT): $(test_modular_balanced_double_OBJECTS) $(test_modular_balanced_double_DEPENDENCIES) $(EXTRA_test_modular_balanced_double_DEPENDENCIES) 
	@rm -f test-modular-balanced-double$(EXEEXT)
	$(CXXLINK) $(test_modular_balanced_double_OBJECTS) $(test_modular_balanced_double_LDADD) $(LIBS)
test-modular-balanced-float$(EXEEXT): $(test_modular_balanced_float_OBJECTS) $(test_modular_balanced_float_DEPENDENCIES) $(EXTRA_test_modular_balanced_float_DEPENDENCIES) 
	@rm -f test-modular-balanced-float$(EXEEXT)
	$(CXXLINK) $(test_modular_balanced_float_OBJECTS) $(test_modular_balanced_float_LDADD) $(LIBS)
test-modular-balanced-int$(EXEEXT): $(test_modular_balanced_int_OBJECTS) $(test_modular_balanced_int_DEPENDENCIES) $(EXTRA_test_modular_balanced_int_DEPENDENCIES) 
	@rm -f test-modular-balanced-int$(EXEEXT)
	$(CXXLINK) $(test_modular_balanced_int_OBJECTS) $(test_modular_balanced_int_LDADD) $(LIBS)
test-modular-byte$(EXEEXT): $(test_modular_byte_OBJECTS) $(test_modular_byte_DEPENDENCIES) $(EXTRA_test_modular_byte_DEPENDENCIES) 
	@rm -f test-modular-byte$(EXEEXT)
	$(CXXLINK) $(test_modular_byte_OBJECTS) $(test_modular_byte_LDADD) $(LIBS)
test-modular-double$(EXEEXT): $(test_modular_double_OBJECTS) $(test_modular_double_DEPENDENCIES) $(EXTRA_test_modular_double_DEPENDENCIES) 
	@rm -f test-modular-double$(EXEEXT)
	$(CXXLINK) $(test_modular_double_OBJECTS) $(test_modular_double_LDADD) $(LIBS)
test-modular-float$(EXEEXT): $(test_modular_float_OBJECTS) $(test_modular_float_DEPENDENCIES) $(EXTRA_test_modular_float_DEPENDENCIES) 
	@rm -f test-modular-float$(EXEEXT)
	$(CXXLINK) $(test_modular_float_OBJECTS) $(test_modular_float_LDADD) $(LIBS)
test-modular-int$(EXEEXT): $(test_modular_int_OBJECTS) $(test_modular_int_DEPENDENCIES) $(EXTRA_test_modular_int_DEPENDENCIES) 
	@rm -f test-modular-int$(EXEEXT)
	$(CXXLINK) $(test_modular_int_OBJECTS) $(test_modular_int_LDADD) $(LIBS)
test-modular-short$(EXEEXT): $(test_modular_short_OBJECTS) $(test_modular_short_DEPENDENCIES) $(EXTRA_test_modular_short_DEPENDENCIES) 
	@rm -f test-modular-short$(EXEEXT)
	$(CXXLINK) $(test_modular_short_OBJECTS) $(test_modular_short_LDADD) $(LIBS)
test-moore-penrose$(EXEEXT): $(test_moore_penrose_OBJECTS) $(test_moore_penrose_DEPENDENCIES) $(EXTRA_test_moore_penrose_DEPENDENCIES) 
	@rm -f test-moore-penrose$(EXEEXT)
	$(CXXLINK) $(test_moore_penrose_OBJECTS) $(test_moore_penrose_LDADD) $(LIBS)
test-ntl-RR$(EXEEXT): $(test_ntl_RR_OBJECTS) $(test_ntl_RR_DEPENDENCIES) $(EXTRA_test_ntl_RR_DEPENDENCIES) 
	@rm -f test-ntl-RR$(EXEEXT)
	$(CXXLINK) $(test_ntl_RR_OBJECTS) $(test_ntl_RR_LDADD) $(LIBS)
test-ntl-ZZ_p$(EXEEXT): $(test_ntl_ZZ_p_OBJECTS) $(test_ntl_ZZ_p_DEPENDENCIES) $(EXTRA_test_ntl_ZZ_p_DEPENDENCIES) 
	@rm -f test-ntl-ZZ_p$(EXEEXT)
	$(CXXLINK) $(test_ntl_ZZ_p_OBJECTS) $(test_ntl_ZZ_p_LDADD) $(LIBS)
test-ntl-hankel$(EXEEXT): $(test_ntl_hankel_OBJECTS) $(test_ntl_hankel_DEPENDENCIES) $(EXTRA_test_ntl_hankel_DEPENDENCIES) 
	@rm -f test-ntl-hankel$(EXEEXT)
	$(CXXLINK) $(test_ntl_hankel_OBJECTS) $(test_ntl_hankel_LDADD) $(LIBS)
test-ntl-lzz_p$(EXEEXT): $(test_ntl_lzz_p_OBJECTS) $(test_ntl_lzz_p_DEPENDENCIES) $(EXTRA_test_ntl_lzz_p_DEPENDENCIES) 
	@rm -f test-ntl-lzz_p$(EXEEXT)
	$(CXXLINK) $(test_ntl_lzz_p_OBJECTS) $(test_ntl_lzz_p_LDADD) $(LIBS)
test-ntl-sylvester$(EXEEXT): $(test_ntl_sylvester_OBJECTS) $(test_ntl_sylvester_DEPENDENCIES) $(EXTRA_test_ntl_sylvester_DEPENDENCIES) 
	@rm -f test-ntl-sylvester$(EXEEXT)
	$(CXXLINK) $(test_ntl_sylvester_OBJECTS) $(test_ntl_sylvester_LDADD) $(LIBS)
test-ntl-toeplitz$(EXEEXT): $(test_ntl_toeplitz_OBJECTS) $(test_ntl_toeplitz_DEPENDENCIES) $(EXTRA_test_ntl_toeplitz_DEPENDENCIES) 
	@rm -f test-ntl-toeplitz$(EXEEXT)
	$(CXXLINK) $(test_ntl_toeplitz_OBJECTS) $(test_ntl_toeplitz_LDADD) $(LIBS)
test-nullspace$(EXEEXT): $(test_nullspace_OBJECTS) $(test_nullspace_DEPENDENCIES) $(EXTRA_test_nullspace_DEPENDENCIES) 
	@rm -f test-nullspace$(EXEEXT)
	$(CXXLINK) $(test_nullspace_OBJECTS) $(test_nullspace_LDADD) $(LIBS)
test-optimization$(EXEEXT): $(test_optimization_OBJECTS) $(test_optimization_DEPENDENCIES) $(EXTRA_test_optimization_DEPENDENCIES) 
	@rm -f test-optimization$(EXEEXT)
	$(CXXLINK) $(test_optimization_OBJECTS) $(test_optimization_LDADD) $(LIBS)
test-param-fuzzy$(EXEEXT): $(test_param_fuzzy_OBJECTS) $(test_param_fuzzy_DEPENDENCIES) $(EXTRA_test_param_fuzzy_DEPENDENCIES) 
	@rm -f test-param-fuzzy$(EXEEXT)
	$(CXXLINK) $(test_param_fuzzy_OBJECTS) $(test_param_fuzzy_LDADD) $(LIBS)
test-qlup$(EXEEXT): $(test_qlup_OBJECTS) $(test_qlup_DEPENDENCIES) $(EXTRA_test_qlup_DEPENDENCIES) 
	@rm -f test-qlup$(EXEEXT)
	$(CXXLINK) $(test_qlup_OBJECTS) $(test_qlup_LDADD) $(LIBS)
test-randiter-nonzero$(EXEEXT): $(test_randiter_nonzero_OBJECTS) $(test_randiter_nonzero_DEPENDENCIES) $(EXTRA_test_randiter_nonzero_DEPENDENCIES) 
	@rm -f test-randiter-nonzero$(EXEEXT)
	$(CXXLINK) $(test_randiter_nonzero_OBJECTS) $(test_randiter_nonzero_LDADD) $(LIBS)
test-rank$(EXEEXT): $(test_rank_OBJECTS) $(test_rank_DEPENDENCIES) $(EXTRA_test_rank_DEPENDENCIES) 
	@rm -f test-rank$(EXEEXT)
	$(CXXLINK) $(test_rank_OBJECTS) $(test_rank_LDADD) $(LIBS)
test-rat-charpoly$(EXEEXT): $(test_rat_charpoly_OBJECTS) $(test_rat_charpoly_DEPENDENCIES) $(EXTRA_test_rat_charpoly_DEPENDENCIES) 
	@rm -f test-rat-charpoly$(EXEEXT)
	$(CXXLINK) $(test_rat_charpoly_OBJECTS) $(test_rat_charpoly_LDADD) $(LIBS)
test-rat-minpoly$(EXEEXT): $(test_rat_minpoly_OBJECTS) $(test_rat_minpoly_DEPENDENCIES) $(EXTRA_test_rat_minpoly_DEPENDENCIES) 
	@rm -f test-rat-minpoly$(EXEEXT)
	$(CXXLINK) $(test_rat_minpoly_OBJECTS) $(test_rat_minpoly_LDADD) $(LIBS)
test-rat-solve$(EXEEXT): $(test_rat_solve_OBJECTS) $(test_rat_solve_DEPENDENCIES) $(EXTRA_test_rat_solve_DEPENDENCIES) 
	@rm -f test-rat-solve$(EXEEXT)
	$(CXXLINK) $(test_rat_solve_OBJECTS) $(test_rat_solve_LDADD) $(LIBS)
test-rational-matrix-factory$(EXEEXT): $(test_rational_matrix_factory_OBJECTS) $(test_rational_matrix_factory_DEPENDENCIES) $(EXTRA_test_rational_matrix_factory_DEPENDENCIES) 
	@rm -f test-rational-matrix-factory$(EXEEXT)
	$(CXXLINK) $(test_rational_matrix_factory_OBJECTS) $(test_rational_matrix_factory_LDADD) $(LIBS)
test-rational-reconstruction-base$(EXEEXT): $(test_rational_reconstruction_base_OBJECTS) $(test_rational_reconstruction_base_DEPENDENCIES) $(EXTRA_test_rational_reconstruction_base_DEPENDENCIES) 
	@rm -f test-rational-reconstruction-base$(EXEEXT)
	$(CXXLINK) $(test_rational_reconstruction_base_OBJECTS) $(test_rational_reconstruction_base_LDADD) $(LIBS)
test-rational-solver$(EXEEXT): $(test_rational_solver_OBJECTS) $(test_rational_solver_DEPENDENCIES) $(EXTRA_test_rational_solver_DEPENDENCIES) 
	@rm -f test-rational-solver$(EXEEXT)
	$(CXXLINK) $(test_rational_solver_OBJECTS) $(test_rational_solver_LDADD) $(LIBS)
test-rational-solver-adaptive$(EXEEXT): $(test_rational_solver_adaptive_OBJECTS) $(test_rational_solver_adaptive_DEPENDENCIES) $(EXTRA_test_rational_solver_adaptive_DEPENDENCIES) 
	@rm -f test-rational-solver-adaptive$(EXEEXT)
	$(CXXLINK) $(test_rational_solver_adaptive_OBJECTS) $(test_rational_solver_adaptive_LDADD) $(LIBS)
test-scalar-matrix$(EXEEXT): $(test_scalar_matrix_OBJECTS) $(test_scalar_matrix_DEPENDENCIES) $(EXTRA_test_scalar_matrix_DEPENDENCIES) 
	@rm -f test-scalar-matrix$(EXEEXT)
	$(CXXLINK) $(test_scalar_matrix_OBJECTS) $(test_scalar_matrix_LDADD) $(LIBS)
test-smith-form$(EXEEXT): $(test_smith_form_OBJECTS) $(test_smith_form_DEPENDENCIES) $(EXTRA_test_smith_form_DEPENDENCIES) 
	@rm -f test-smith-form$(EXEEXT)
	$(CXXLINK) $(test_smith_form_OBJECTS) $(test_smith_form_LDADD) $(LIBS)
test-smith-form-adaptive$(EXEEXT): $(test_smith_form_adaptive_OBJECTS) $(test_smith_form_adaptive_DEPENDENCIES) $(EXTRA_test_smith_form_adaptive_DEPENDENCIES) 
	@rm -f test-smith-form-adaptive$(EXEEXT)
	$(CXXLINK) $(test_smith_form_adaptive_OBJECTS) $(test_smith_form_adaptive_LDADD) $(LIBS)
test-smith-form-binary$(EXEEXT): $(test_smith_form_binary_OBJECTS) $(test_smith_form_binary_DEPENDENCIES) $(EXTRA_test_smith_form_binary_DEPENDENCIES) 
	@rm -f test-smith-form-binary$(EXEEXT)
	$(CXXLINK) $(test_smith_form_binary_OBJECTS) $(test_smith_form_binary_LDADD) $(LIBS)
test-smith-form-iliopoulos$(EXEEXT): $(test_smith_form_iliopoulos_OBJECTS) $(test_smith_form_iliopoulos_DEPENDENCIES) $(EXTRA_test_smith_form_iliopoulos_DEPENDENCIES) 
	@rm -f test-smith-form-iliopoulos$(EXEEXT)
	$(CXXLINK) $(test_smith_form_iliopoulos_OBJECTS) $(test_smith_form_iliopoulos_LDADD) $(LIBS)
test-smith-form-local$(EXEEXT): $(test_smith_form_local_OBJECTS) $(test_smith_form_local_DEPENDENCIES) $(EXTRA_test_smith_form_local_DEPENDENCIES) 
	@rm -f test-smith-form-local$(EXEEXT)
	$(CXXLINK) $(test_smith_form_local_OBJECTS) $(test_smith_form_local_LDADD) $(LIBS)
test-solve$(EXEEXT): $(test_solve_OBJECTS) $(test_solve_DEPENDENCIES) $(EXTRA_test_solve_DEPENDENCIES) 
	@rm -f test-solve$(EXEEXT)
	$(CXXLINK) $(test_solve_OBJECTS) $(test_solve_LDADD) $(LIBS)
test-solve-nonsingular$(EXEEXT): $(test_solve_nonsingular_OBJECTS) $(test_solve_nonsingular_DEPENDENCIES) $(EXTRA_test_solve_nonsingular_DEPENDENCIES) 
	@rm -f test-solve-nonsingular$(EXEEXT)
	$(CXXLINK) $(test_solve_nonsingular_OBJECTS) $(test_solve_nonsingular_LDADD) $(LIBS)
test-sparse$(EXEEXT): $(test_sparse_OBJECTS) $(test_sparse_DEPENDENCIES) $(EXTRA_test_sparse_DEPENDENCIES) 
	@rm -f test-sparse$(EXEEXT)
	$(CXXLINK) $(test_sparse_OBJECTS) $(test_sparse_LDADD) $(LIBS)
test-subiterator$(EXEEXT): $(test_subiterator_OBJECTS) $(test_subiterator_DEPENDENCIES) $(EXTRA_test_subiterator_DEPENDENCIES) 
	@rm -f test-subiterator$(EXEEXT)
	$(CXXLINK) $(test_subiterator_OBJECTS) $(test_subiterator_LDADD) $(LIBS)
test-submatrix$(EXEEXT): $(test_submatrix_OBJECTS) $(test_submatrix_DEPENDENCIES) $(EXTRA_test_submatrix_DEPENDENCIES) 
	@rm -f test-submatrix$(EXEEXT)
	$(CXXLINK) $(test_submatrix_OBJECTS) $(test_submatrix_LDADD) $(LIBS)
test-subvector$(EXEEXT): $(test_subvector_OBJECTS) $(test_subvector_DEPENDENCIES) $(EXTRA_test_subvector_DEPENDENCIES) 
	@rm -f test-subvector$(EXEEXT)
	$(CXXLINK) $(test_subvector_OBJECTS) $(test_subvector_LDADD) $(LIBS)
test-sum$(EXEEXT): $(test_sum_OBJECTS) $(test_sum_DEPENDENCIES) $(EXTRA_test_sum_DEPENDENCIES) 
	@rm -f test-sum$(EXEEXT)
	$(CXXLINK) $(test_sum_OBJECTS) $(test_sum_LDADD) $(LIBS)
test-toeplitz-det$(EXEEXT): $(test_toeplitz_det_OBJECTS) $(test_toeplitz_det_DEPENDENCIES) $(EXTRA_test_toeplitz_det_DEPENDENCIES) 
	@rm -f test-toeplitz-det$(EXEEXT)
	$(CXXLINK) $(test_toeplitz_det_OBJECTS) $(test_toeplitz_det_LDADD) $(LIBS)
test-toom-cook$(EXEEXT): $(test_toom_cook_OBJECTS) $(test_toom_cook_DEPENDENCIES) $(EXTRA_test_toom_cook_DEPENDENCIES) 
	@rm -f test-toom-cook$(EXEEXT)
	$(CXXLINK) $(test_toom_cook_OBJECTS) $(test_toom_cook_LDADD) $(LIBS)
test-trace$(EXEEXT): $(test_trace_OBJECTS) $(test_trace_DEPENDENCIES) $(EXTRA_test_trace_DEPENDENCIES) 
	@rm -f test-trace$(EXEEXT)
	$(CXXLINK) $(test_trace_OBJECTS) $(test_trace_LDADD) $(LIBS)
test-triplesbb$(EXEEXT): $(test_triplesbb_OBJECTS) $(test_triplesbb_DEPENDENCIES) $(EXTRA_test_triplesbb_DEPENDENCIES) 
	@rm -f test-triplesbb$(EXEEXT)
	$(CXXLINK) $(test_triplesbb_OBJECTS) $(test_triplesbb_LDADD) $(LIBS)
test-unparametric-field$(EXEEXT): $(test_unparametric_field_OBJECTS) $(test_unparametric_field_DEPENDENCIES) $(EXTRA_test_unparametric_field_DEPENDENCIES) 
	@rm -f test-unparametric-field$(EXEEXT)
	$(CXXLINK) $(test_unparametric_field_OBJECTS) $(test_unparametric_field_LDADD) $(LIBS)
test-vector-domain$(EXEEXT): $(test_vector_domain_OBJECTS) $(test_vector_domain_DEPENDENCIES) $(EXTRA_test_vector_domain_DEPENDENCIES) 
	@rm -f test-vector-domain$(EXEEXT)
	$(CXXLINK) $(test_vector_domain_OBJECTS) $(test_vector_domain_LDADD) $(LIBS)
test-zero-one$(EXEEXT): $(test_zero_one_OBJECTS) $(test_zero_one_DEPENDENCIES) $(EXTRA_test_zero_one_DEPENDENCIES) 
	@rm -f test-zero-one$(EXEEXT)
	$(CXXLINK) $(test_zero_one_OBJECTS) $(test_zero_one_LDADD) $(LIBS)
test-zo$(EXEEXT): $(test_zo_OBJECTS) $(test_zo_DEPENDENCIES) $(EXTRA_test_zo_DEPENDENCIES) 
	@rm -f test-zo$(EXEEXT)
	$(CXXLINK) $(test_zo_OBJECTS) $(test_zo_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.C.o:
	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    col="$$grn"; \
	  else \
	    col="$$red"; \
	  fi; \
	  echo "$${col}$$dashes$${std}"; \
	  echo "$${col}$$banner$${std}"; \
	  test -z "$$skipped" || echo "$${col}$$skipped$${std}"; \
	  test -z "$$report" || echo "$${col}$$report$${std}"; \
	  echo "$${col}$$dashes$${std}"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) check-am \
	ctags-recursive install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-TESTS check-am clean clean-generic \
	clean-libtool ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am


#  test_integer_tools_SOURCES =          \
#  test-integer-tools.C

#check: checker
#	checker -c

# for compilation of new non-enumerated tests
%:%.C
	$(CXX) $(CXXFLAGS) $(AM_CXXFLAGS) $(OPTFLAGS) ${INCLUDES} $(AM_CPPFLAGS) $*.C -o $@ $(LDADD)

fullcheck: checker
	./checker

checker: checker.C

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
