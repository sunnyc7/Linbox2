/* Copyright (c) LinBox
 * ========LICENCE========
 * This file is part of the library LinBox.
 *
 * LinBox is free software: you can redistribute it and/or modify
 * it under the terms of the  GNU Lesser General Public
 * License as published by the Free Software Foundation; either
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 * ========LICENCE========
 *.
 */


/** \ingroup linbox
  \defgroup Vector vector

  \brief LinBox vectors.

  All LinBox dense vectors must implement the dense vector common
  object interface as it is defined in the dense vector
  @link Archetypes archetype@endlink.
  It is basically the non-resizing subset
  of functionality of the STL <code>vector<T></code> container.
  For information on the STL vector, see SGI's
  <a href=http://www.sgi.com/Technology/STL/>Standard Template Library Programmer's Guide</a>.

  All LinBox sparse vectors must implement the sparse vector common
  object interface as it is defined in the sparse vector
  @link Archetypes archetype@endlink.

  The LinBox sparse vector common object interface is the same as either
  the STL sequence of pairs of \c size_t and a field element
  or an STL unique and pair associative container.  (That is, an STL \c map
  without the <code>operator[]</code>.)
  It is also always assumed that the entries in the sparse vector are in
  ascending order starting with the first index no less than zero.


  LinBox vectors are indexed starting at zero, not one,
  just like STL vectors and C-style arrays.

  @see Archetypes

 */
// vim:syn=doxygen
